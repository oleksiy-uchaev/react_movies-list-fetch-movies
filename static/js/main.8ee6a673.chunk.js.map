{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","services/createMovieItem.tsx","components/FindMovie/FindMovie.tsx","api.ts","services/getNewMoveList.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","data","_ref$setMovies","setMovies","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","movieData","setMovieData","_useState7","_useState8","errorData","setErrorData","Title","Plot","Poster","concat","imdbID","_Fragment","onSubmit","e","query","preventDefault","trim","length","fetch","then","res","json","catch","Response","Error","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","classNames","onClick","newItem","array","some","item","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ee6a673.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from '../types/MovieData';\n\nexport const createMovieItem = (data: MovieData) => {\n  const defImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return {\n    title: data.Title,\n    description: data.Plot,\n    imgUrl: data.Poster !== 'N/A' ? data.Poster : defImg,\n    imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    imdbId: data.imdbID,\n  };\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\nimport { createMovieItem } from '../../services/createMovieItem';\nimport { getNewMoveList } from '../../services/getNewMoveList';\n\ntype Props = {\n  movies: Movie[]\n  setMovies: (val: Movie[]) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies = () => {},\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n  const [errorData, setErrorData] = useState<ResponseError | null>(null);\n\n  const movie = (movieData === null) ? null : createMovieItem(movieData);\n\n  const handleMovieAdd = () => {\n    if (movie) {\n      setMovies(getNewMoveList(movie, movies));\n      setMovieData(null);\n      setInputValue('');\n    }\n  };\n\n  const handleSubbmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    if (inputValue.trim().length > 0) {\n      getMovie(inputValue)\n        .then(res => ('Error' in res ? setErrorData(res) : setMovieData(res)))\n        .finally(() => setIsLoading(false));\n    }\n  };\n\n  const handleInputChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n\n    if (errorData) {\n      setErrorData(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubbmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {errorData !== null && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={inputValue.length === 0}\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=594234cb';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie } from '../types/Movie';\n\nexport const getNewMoveList = (newItem: Movie, array: Movie[]) => {\n  const isItemInArr = array.some(item => item.imdbId === newItem.imdbId);\n\n  return isItemInArr ? array : [...array, newItem];\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}